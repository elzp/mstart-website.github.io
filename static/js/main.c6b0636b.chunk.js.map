{"version":3,"sources":["header-american-songwriter.jpg","4young-heart.jpg","3beautiful-lies.jpg","2fire-within.jpg","1birdy.jpg","components/Discography/Discography.js","components/About/About.js","hooks/outsideRef.js","components/ContactForm/ContactForm.js","functionsAndVars.js","components/Verification/Verification.js","App.js","reportWebVitals.js","index.js"],"names":["Discography","props","cdsArray","cd4","cd3","cd2","cd1","id","className","map","it","index","src","alt","About","temporaryContentArray","split","pop","contentArray","useOutsideRef","ref","setVisibility","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ContactForm","setVisibilityOfForm","style","handleSendingButtonClick","visibilityOfVerification","wasDataFromFormSend","wrapper","useRef","handlesettingVisibilityOfForm","useCallback","formAreaNames","defaultFormValues","useState","formValues","setFormValues","nameError","setNameError","surnameError","setSurnameError","emailError","setEmailError","messageError","setMessageError","phoneError","setPhoneError","sendingError","setSendingError","statusOfInputedData","setStatusOfInputedData","nameStatus","surnameStatus","emailStatus","messageStatus","phoneStatus","handleInputChange","type","newStatuses","input","value","allInputedKeys","length","test","currentStatuses","label","onChange","onClick","disabled","defaultformStyle","background","height","width","margin","padding","top","left","display","position","questions","question","answers","goodAnswer","indexesArray","Object","keys","getQuestion","askedQuestions","answeredQuestions","Array","random","notAskedQuestions","Math","ceil","filter","every","it2","idOfChoosenQuestion","Verification","setvisibilityOfVerification","setDataFromFormWasSend","questionData","setQuestionData","numberOfGoodQuestions","setNumberOfGoodQuestions","text","settext","visibilityOfRestartButton","setVisibilityOfRestartButton","errorText","sendText","setTimeout","item","newQuestion","handleAnswering","App","visibilityOfForm","formStyle","setFormStyle","timesOfStyleChanges","setTimesOfStyleChanges","img","title","frameborder","allow","allowfullscreen","animationName","displayVar","assign","animationDuration","WebkitAnimationFillMode","animationFillMode","firstQuestion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6b0636b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-american-songwriter.7e284031.jpg\";","export default __webpack_public_path__ + \"static/media/4young-heart.18fc0c85.jpg\";","export default __webpack_public_path__ + \"static/media/3beautiful-lies.c96dc547.jpg\";","export default __webpack_public_path__ + \"static/media/2fire-within.d5e8263b.jpg\";","export default __webpack_public_path__ + \"static/media/1birdy.0ebed2b9.jpg\";","import './../../dist/App.css';\r\nimport React from 'react';\r\nimport cd4 from './../../4young-heart.jpg';\r\nimport cd3 from './../../3beautiful-lies.jpg';\r\nimport cd2 from './../../2fire-within.jpg';\r\nimport cd1 from './../../1birdy.jpg';\r\n\r\nfunction Discography(props) {\r\n  const cdsArray = [\r\n    [cd4, \"Young heart\", \"2021\"],\r\n    [cd3, \"Beautiful Lies\", \"2016\"], \r\n    [cd2, \"Fire Within\", \"2012\" ],\r\n    [cd1, \"Birdy\", \"2011\"]];\r\n\r\n  return (\r\n    <div id=\"discs\">\r\n      <h4>Discography</h4>\r\n      <div className=\"disc-wrapper\">\r\n         {\r\n           cdsArray.map((it, index)=>{\r\n            return (\r\n            <div className=\"disc-container\">\r\n              <div key={index}\r\n              className=\"disc-img\">\r\n                <img src={it[0]} \r\n                alt= {it[1]}\r\n                />\r\n              </div>\r\n              <div \r\n              className=\"disc-text\"\r\n              key={index}>\r\n                <p className=\"disc-title\">{it[1]}</p>\r\n                <p className=\"disc-year\">{it[2]}</p>\r\n                </div>\r\n            </div>\r\n            );}\r\n            )\r\n         } \r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Discography;\r\n","import './../../dist/App.css';\r\nimport React from 'react';\r\nimport Discography from './../Discography/Discography';\r\n\r\nfunction About(props) {\r\n  let conetentText = `Her debut single, a cover version of Bon Iver's \"Skinny Love\",\r\n   was her breakthrough, charting all across Europe and earning platinum certification\r\n   six times in Australia. Her self-titled debut album, Birdy, was peaking at number one\r\n   in Australia, Belgium and the Netherlands. At the 2014 Brit Awards, she was nominated\r\n   for Best British Female Solo Artist.`;\r\n\r\n  let temporaryContentArray = conetentText.split(\".\");\r\n  temporaryContentArray.pop();\r\n  const contentArray = temporaryContentArray.map(it => it+\".\");\r\n\r\n      \r\n  return (\r\n    <div className =\"about\">\r\n        <h2>Winner of <b>Open Mic UK</b> competition in 2008, at the age of <b>12</b>.</h2>\r\n        {\r\n          contentArray.map((it, index)=>(\r\n            <div key={index}> \r\n              {it}\r\n            </div>\r\n          ))\r\n        }\r\n    <Discography />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { useEffect } from 'react';\r\n\r\nfunction useOutsideRef (ref, setVisibility) {\r\n\r\n   useEffect( () => {\r\n      function handleClickOutside(event) {\r\n            \r\n         if (ref.current && !ref.current.contains(event.target)) {\r\n            setVisibility();\r\n            }\r\n      }\r\n\r\n      // subscribe functionality\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      // unsubscribe functionality\r\n      return () => {\r\n         document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n       \r\n   }, [ref, setVisibility])\r\n\r\n    \r\n}\r\n\r\n\r\nexport default useOutsideRef;\r\n","import './../../dist/App.css';\r\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\r\nimport useOutsideRef from './../../hooks/outsideRef';\r\n\r\n\r\nfunction ContactForm(props) {\r\n  const { setVisibilityOfForm, style, handleSendingButtonClick,\r\n   visibilityOfVerification, wasDataFromFormSend\r\n} = props;\r\n  const wrapper = useRef(null);\r\n  const handlesettingVisibilityOfForm = useCallback(() => {\r\n    if (visibilityOfVerification) {\r\n      setVisibilityOfForm(true)\r\n    } else {\r\n     setVisibilityOfForm(false)\r\n    }\r\n    if(wasDataFromFormSend){\r\n      setVisibilityOfForm(false)\r\n    }\r\n  }, [setVisibilityOfForm, visibilityOfVerification, wasDataFromFormSend]);\r\n  useOutsideRef(wrapper, handlesettingVisibilityOfForm)\r\n  \r\n  const formAreaNames = [\"username\", \"surname\", \"e-mail\", \"message\", \"phone\"];\r\n  const defaultFormValues = {\r\n    [formAreaNames[0]]: \"\",\r\n    [formAreaNames[1]]: \"\",\r\n    [formAreaNames[2]]: \"\",\r\n    [formAreaNames[3]]: \"\",\r\n    [formAreaNames[4]]: \"\",\r\n  };\r\n  const [formValues, setFormValues] =useState(defaultFormValues);\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [surnameError, setSurnameError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [messageError, setMessageError] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [sendingError, setSendingError] = useState(\"\");\r\n\r\n    const [statusOfInputedData, setStatusOfInputedData] = useState([true, true, true, true, true]);\r\n    const [nameStatus, surnameStatus, emailStatus, messageStatus, phoneStatus] = statusOfInputedData;\r\n\r\n  \r\n  const handleClickingButtonToSend = () => {\r\n    if(\r\n    nameError===\"\" & \r\n    surnameError===\"\" & \r\n    emailError===\"\" & \r\n    messageError===\"\" & \r\n    phoneError === \"\" &\r\n    formValues[formAreaNames[0]] !== \"\" &\r\n    formValues[formAreaNames[1]] !== \"\" &\r\n    formValues[formAreaNames[2]] !== \"\" &\r\n    formValues[formAreaNames[3]] !== \"\" &\r\n    formValues[formAreaNames[4]] !== \"\"\r\n    ){\r\n       \r\n      handleSendingButtonClick();\r\n      setSendingError(\"\");\r\n    }else {setSendingError(\"Add proper e-mail adress, phone number and message to send us informations.\");}\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(nameError===\"\" & \r\n    surnameError===\"\" & \r\n    emailError===\"\" & \r\n    messageError===\"\" & \r\n    phoneError === \"\" & \r\n    sendingError!== \"\" &\r\n    formValues[formAreaNames[0]] !== \"\" &\r\n    formValues[formAreaNames[1]] !== \"\" &\r\n    formValues[formAreaNames[2]] !== \"\" &\r\n    formValues[formAreaNames[3]] !== \"\" &\r\n    formValues[formAreaNames[4]] !== \"\"\r\n      ){\r\n        setSendingError(\"\"); //clean error of sending\r\n    }\r\n  }, [nameError, surnameError, emailError, messageError, phoneError, sendingError]);\r\n\r\n  const handleInputChange = (event, type) => {\r\n    // event.preventDefault();\r\n    let existingInput;\r\n    const newStatuses = [ ...statusOfInputedData];\r\n    const input = event.target.value;\r\n    const allInputedKeys = input.split(\"\");\r\n\r\n    switch (type){ \r\n      case formAreaNames[0]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[0]]: input}});\r\n\r\n        existingInput = formValues[formAreaNames[0]].split(\"\");\r\n        if(existingInput.length !== allInputedKeys.length) { //if user deleted or added something to input\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        } \r\n\r\n        if(!/(\\W)|(\\d)|(\\s)/.test(input) & allInputedKeys.length >3) {\r\n          newStatuses[0]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } else {\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        if (input ===\"\"){\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        break;\r\n      case formAreaNames[1]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[1]]: input}});\r\n        existingInput = formValues[formAreaNames[1]].split(\"\");\r\n        if(existingInput.length !== allInputedKeys.length) { //if user deleted or added something to input\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        } \r\n\r\n        if(!/(\\W)|(\\d)|(\\s)/.test(input) & allInputedKeys.length >3) {\r\n          newStatuses[1]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } else {\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        if (input ===\"\"){\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        break;\r\n      case formAreaNames[2]:\r\n        newStatuses[2]=false;\r\n          setStatusOfInputedData(currentStatuses=> newStatuses);\r\n        setFormValues(current =>{return {...current, [formAreaNames[2]]: input}});\r\n        if(/^[a-zA-Z0-9._-]{3,}@[a-zA-Z0-9.-]{3,}\\.[a-zA-Z]{2,6}$/.test(input) && /@{1}/.test(input)) {\r\n          newStatuses[2]=true;\r\n          setStatusOfInputedData(currentStatuses=> newStatuses);\r\n        } \r\n        break;\r\n      case formAreaNames[3]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[3]]: input}});\r\n        if(input !==\"\"){\r\n          newStatuses[3]=true;\r\n          setStatusOfInputedData(currentStatuses=> newStatuses);\r\n        } else {\r\n          newStatuses[3]=false;\r\n          setStatusOfInputedData(currentStatuses=> newStatuses);\r\n        }\r\n        break;\r\n        case formAreaNames[4]:\r\n          setFormValues(current =>{return {...current, [formAreaNames[4]]: input}});\r\n          if(input !==\"\" & /(^[^0])(\\d)/.test(input) & allInputedKeys.length === 8){\r\n            newStatuses[4]=true;\r\n            setStatusOfInputedData(currentStatuses=> newStatuses);\r\n          } else {\r\n            newStatuses[4]=false;\r\n            setStatusOfInputedData(currentStatuses=> newStatuses);\r\n          }\r\n          break;        \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(!nameStatus) {\r\n      setNameError('Your name have to contain only letters and have them more than 3.');\r\n    } else {\r\n      setNameError(\"\");\r\n    }\r\n  },[nameStatus])\r\n\r\n  useEffect(()=>{\r\n    if(!surnameStatus) {\r\n      setSurnameError('Your surname have to contain only letters and have them more than 3.');\r\n    } else {\r\n      setSurnameError(\"\");\r\n    }\r\n  },[surnameStatus])\r\n\r\n  useEffect(()=>{   \r\n    if(!emailStatus) {\r\n      setEmailError(\"Your e-mail adress doesn't have  proper e-mail adress format.\");\r\n      } else {\r\n        setEmailError(\"\");\r\n      }\r\n    },[emailStatus])\r\n  \r\n  useEffect(()=>{\r\n    if(!messageStatus) {\r\n      setMessageError(\"Add some message.\");\r\n    } else {\r\n      setMessageError(\"\");\r\n    }\r\n  },[messageStatus])\r\n\r\n  useEffect(()=>{\r\n    if(!phoneStatus) {\r\n      setPhoneError(\"Phone has to contain only numbers and has length of 8.\");\r\n    } else {\r\n      setPhoneError(\"\");\r\n    }\r\n  },[phoneStatus])\r\n\r\n  useEffect(()=>{\r\n    if(wasDataFromFormSend){\r\n      setFormValues(defaultFormValues);\r\n      setNameError(\"\");\r\n      setSurnameError(\"\");\r\n      setEmailError(\"\");\r\n      setMessageError(\"\");\r\n      setPhoneError(\"\");\r\n    }\r\n  }, [wasDataFromFormSend])\r\n\r\n  return (\r\n    <div \r\n    id=\"form\"\r\n    style={style}\r\n    ref={wrapper}\r\n    >\r\n        <h4>If you want us to perform in your event, please fill the form to contact with our manager!</h4>\r\n        <div> \r\n            <p>Your name:</p>\r\n            <input label=\"username\"\r\n            value={formValues[formAreaNames[0]]}\r\n            onChange={(event) => {\r\n            handleInputChange(event, formAreaNames[0]);}}\r\n            />\r\n            <div className=\"error\"><bold>{nameError}</bold></div>\r\n            <p>Your surname:</p>\r\n            <input label=\"surname\"\r\n            value={formValues[formAreaNames[1]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[1])}}\r\n            />\r\n            <div className=\"error\"><bold>{surnameError}</bold></div>\r\n            <p>Your e-mail adress:</p>\r\n            <input label=\"e-mail\"\r\n            type=\"email\"\r\n            value={formValues[formAreaNames[2]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[2])}}\r\n            />\r\n            <div className=\"error\"><bold>{emailError}</bold></div>\r\n            <p>Your phone number:</p>\r\n            <input label=\"phone\"\r\n            type=\"tel\"\r\n            value={formValues[formAreaNames[4]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[4])}}\r\n            />\r\n            <div className=\"error\"><bold>{phoneError}</bold></div>\r\n            <p>Tell us e.g. when and where you want us to perform concert:</p>\r\n            <textarea label=\"message\"\r\n            value={formValues[formAreaNames[3]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[3])}}\r\n            />\r\n            <div className=\"error\"><bold>{messageError}</bold></div>\r\n            <div className=\"error\">{sendingError}</div>\r\n        </div>\r\n        <div><button \r\n        id=\"btn-sendform\" \r\n        onClick={handleClickingButtonToSend}\r\n        disabled={visibilityOfVerification}\r\n        >Send your proposition.</button></div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","const gbColor =\"#e9f4f3\";\r\nconst borderColor = \"#262d35\";\r\n\r\nexport const defaultformStyle = {\r\n  //\"background-image\": './form-bg-mikhail-nilov.png',\r\n  background: gbColor,\r\n  height: \"100vh\",\r\n  width: \"50vw\",\r\n  \"border-left\": `1px solid ${borderColor}`,\r\n  margin: 0,\r\n  padding: 0,\r\n  top: \"0px\",\r\n  left: \"0px\",\r\n  display: \"none\",\r\n  position: \"fixed\",\r\n};\r\n\r\nexport const parametersOfSlideForm = (animationDuration, animationName, displayVar)=>{\r\n    return {\r\n      animationDuration: `${animationDuration}s`,\r\n      animationName: animationName,\r\n      WebkitAnimationFillMode: \"forwards\",\r\n      animationFillMode: \"forwards\",\r\n      display: displayVar\r\n}};\r\n\r\n//// verification code\r\n// set of questions\r\nconst questions = {\r\n  1: { \r\n    question: 'Which instrument doesn\\'t have strings?',\r\n    answers: [\"guitar\", \"trumpet\", \"harp\"],\r\n    goodAnswer: 2,\r\n  },\r\n  2: { \r\n    question: 'To which instrument you have to blow to play it?',\r\n    answers: [\"trumpet\", \"piano\", \"drum\"],\r\n    goodAnswer: 1,\r\n  },\r\n  3: { \r\n    question: 'Which instrument doesn\\'t have keys?',\r\n    answers: [\"accordion\", \"piano\", \"guitar\"],\r\n    goodAnswer: 3,\r\n  },\r\n  4: { \r\n    question: 'Which of below isn\\'t a name of singing voice?',\r\n    answers: [\"alto\", \"Freddie Mercury\", \"soprano\"],\r\n    goodAnswer: 2,\r\n  },\r\n  5: { \r\n    question: 'Which band usually perform pop songs?',\r\n    answers: [\"Rammstein\", \"Mettalica\", \"Panic in the Disco\"],\r\n    goodAnswer: 3,\r\n  },\r\n  6: { \r\n    question: 'Which artist/band originated in \\'90s?',\r\n    answers: [\"Birdy\", \"Billie Eilish\", \"Nirvana\"],\r\n    goodAnswer: 3,\r\n  }\r\n};\r\n// array with keys in question object\r\nconst indexesArray = Object.keys(questions).map(it=>+it);\r\n\r\n// get question with answers\r\n\r\nexport const getQuestion = (\r\n  askedQuestions //array\r\n) => {\r\n  let question = { \r\n    question: '',\r\n    answers: [\"\", \"\", \"\"],\r\n    goodAnswer: \"\",\r\n  };\r\n  let answeredQuestions = askedQuestions;\r\n  if(askedQuestions.length===5){\r\n    // If user answered 5 questions and didn't get 3 good answers <=> user isn't considered as a person.\r\n    answeredQuestions = new Array(4);\r\n    return {question, askedQuestions: answeredQuestions}; \r\n  }\r\n  \r\n  //// choose different question every time\r\n\r\n  // get random number \r\n  let random = 1;\r\n  let notAskedQuestions = [];\r\n\r\n  if (askedQuestions === []){\r\n    notAskedQuestions = indexesArray;\r\n    random = Math.ceil(Math.random()*notAskedQuestions.length);\r\n\r\n  }else{\r\n    // get  questions which haven't been asked\r\n    notAskedQuestions = indexesArray.filter(\r\n      it=>\r\n      // checks if number of question isn't in askedQuestions array\r\n      askedQuestions.every(it2=>it!==it2) \r\n    )\r\n\r\n    random = Math.ceil(Math.random()*notAskedQuestions.length);\r\n  }\r\n\r\n  // choose id of question\r\n  const idOfChoosenQuestion = notAskedQuestions[random-1];\r\n \r\n  answeredQuestions =[...answeredQuestions, idOfChoosenQuestion];\r\n  question = questions[idOfChoosenQuestion];\r\n\r\n  return {question, askedQuestions: answeredQuestions};\r\n}\r\n","import './../../dist/App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getQuestion } from './../../functionsAndVars';\r\n\r\nfunction Verification(props) {\r\n    const { setvisibilityOfVerification, setDataFromFormWasSend, setVisibilityOfForm } = props;\r\n\r\n    const [questionData, setQuestionData] =useState(getQuestion([]));\r\n    const [numberOfGoodQuestions, setNumberOfGoodQuestions] = useState(0);\r\n    const [text, settext] = useState('');\r\n    const [visibilityOfRestartButton, setVisibilityOfRestartButton] = useState(false);\r\n\r\n    const {question: {question, answers, goodAnswer}, askedQuestions} = questionData;\r\n    const errorText = 'You had 5 chances and you did\\'t get 3 good answers.';\r\n    const sendText = 'Your\\'e message was send. Verification tab will close after about 3 seconds.';\r\n\r\n    const handleAnswering = (event) => {\r\n      \r\n      if(event.target.value === answers[goodAnswer-1]){\r\n        setNumberOfGoodQuestions(numberOfGoodQuestions+1);\r\n      }\r\n\r\n      const newQuestion = getQuestion(askedQuestions);\r\n      const {question:{question: textOfQuestion}} =  newQuestion;\r\n      if(textOfQuestion !==''){\r\n        setQuestionData(newQuestion);\r\n      }\r\n      else{ \r\n        if(text !== sendText) {\r\n        // user exceeded limit of 5 questions and didn't answered with 3 good answers\r\n          settext(errorText);\r\n        }\r\n       }\r\n    }\r\n\r\n    // handling getting 3 good answers\r\n    useEffect(()=>{\r\n      if(numberOfGoodQuestions===3){\r\n        settext(sendText);\r\n\r\n        // area to add function to send data from form \r\n      }\r\n    }, [numberOfGoodQuestions])\r\n\r\n    //// restarting process of verifying\r\n    // show reset button\r\n    useEffect(()=>{\r\n      if(text === errorText) { \r\n      setVisibilityOfRestartButton(true);\r\n      }\r\n    }, [text])\r\n  \r\n    const handleRestartButton = () => {\r\n      // setting every state to initial value\r\n      settext('');\r\n      setVisibilityOfRestartButton(false);\r\n      setQuestionData(getQuestion([]));\r\n      setNumberOfGoodQuestions(0);\r\n    }\r\n\r\n    // handling exiting verification tab\r\n    useEffect(()=>{\r\n      if(text === sendText) {\r\n        setTimeout( () =>{\r\n        setvisibilityOfVerification(false);\r\n        setVisibilityOfForm(false);\r\n        setDataFromFormWasSend(true);// added to form tab be able to close automaticly\r\n        },\r\n        3000);\r\n      };\r\n    }, [text])\r\n\r\n    const handleExitButton = () => {\r\n      setVisibilityOfRestartButton(false);\r\n      setvisibilityOfVerification(false);\r\n    }\r\n\r\n  return (\r\n    <div \r\n    className =\"verification\"\r\n    >\r\n        {visibilityOfRestartButton &&\r\n          <button\r\n          id=\"exit\"\r\n          onClick={handleExitButton}\r\n          >x</button>\r\n          }\r\n        <h4>We must check if you're a person ;)</h4>\r\n        <h6>Please answer 3 questions.</h6>\r\n        <div className=\"question\">\r\n            {question}\r\n        </div>\r\n        {answers.map((item, index) =><div key={index}>\r\n        <button className=\"questionsAnswer\"\r\n        onClick={(event, item)=>handleAnswering(event)}\r\n        value={item}\r\n        >{item}</button>\r\n        </div>)}\r\n        <div className=\"comunicates\"><bold>{text}</bold></div>\r\n        <div>\r\n          {visibilityOfRestartButton &&\r\n            <button\r\n            onClick={handleRestartButton}\r\n            >Restart</button>\r\n          }\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Verification;\r\n","import './dist/App.css';\r\nimport img from './header-american-songwriter.jpg'\r\nimport About from './components/About/About'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport Verification from './components/Verification/Verification'\r\nimport { parametersOfSlideForm, defaultformStyle, getQuestion } from './functionsAndVars';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [visibilityOfForm, setVisibilityOfForm] = useState(false);\r\n  const [formStyle, setFormStyle] = useState(defaultformStyle);\r\n  const [timesOfStyleChanges, setTimesOfStyleChanges ] = useState(0);\r\n  const [visibilityOfVerification, setvisibilityOfVerification] = useState(false);\r\n  const [wasDataFromFormSend, setDataFromFormWasSend] = useState(false);\r\n\r\n  const handleContactButtonClick = () =>{\r\n  \r\n    setDataFromFormWasSend(false); //added to not closing form, when it is opening after succesfully send data from form. \r\n    setVisibilityOfForm(true);\r\n    if (timesOfStyleChanges === 0){\r\n        // added to not append additional style properties to css, which gives error\r\n    setTimesOfStyleChanges(timesOfStyleChanges+1);\r\n    setFormStyle(\r\n      Object.assign(\r\n        formStyle, \r\n        parametersOfSlideForm(\r\n          3, \r\n          \"slidein\", \r\n          \"inline\"\r\n        )\r\n      )    \r\n    );\r\n  \r\n    }\r\n  }\r\n\r\n  const handleSendingButtonClick = () =>{\r\n    setvisibilityOfVerification(!visibilityOfVerification);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n          <div className=\"header-wrapper\"> \r\n          <img src={img} alt=\"header-img\"></img>\r\n          <h1>BIRDY</h1>\r\n          </div>\r\n      </header>\r\n      <main>      \r\n        <div>\r\n          <div>\r\n          <About />\r\n          <h4>Listen some of her songs.</h4>\r\n         <div>\r\n          <div className=\"videos-wrapper\"> \r\n          <div>\r\n          <iframe src=\"https://www.youtube.com/embed/OmLNs6zQIHo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        <div className=\"videos-wrapper\">\r\n          <div>\r\n            <iframe src=\"https://www.youtube.com/embed/WJTXDCh2YiA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        <div className=\"videos-wrapper\">\r\n          <div>\r\n          <iframe //width=\"560\" height=\"315\"\r\n           src=\"https://www.youtube.com/embed/6K25KhCq7p8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        </div>  \r\n          </div>\r\n\r\n            <button id=\"btn-contact\" \r\n            disabled={visibilityOfForm}\r\n            onClick={handleContactButtonClick}\r\n            >Contact with us!</button>\r\n         </div>\r\n         \r\n        { visibilityOfForm &&\r\n         <ContactForm \r\n         style={formStyle} \r\n         setVisibilityOfForm={setVisibilityOfForm}\r\n         handleSendingButtonClick={handleSendingButtonClick}\r\n         visibilityOfVerification={visibilityOfVerification}\r\n         wasDataFromFormSend={wasDataFromFormSend}\r\n         />\r\n         }\r\n         {visibilityOfVerification &&\r\n          <Verification\r\n          firstQuestion={getQuestion([])}\r\n          setvisibilityOfVerification={setvisibilityOfVerification}\r\n          setDataFromFormWasSend={setDataFromFormWasSend}\r\n          setVisibilityOfForm={setVisibilityOfForm}\r\n          /> \r\n          }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}