{"version":3,"sources":["header-american-songwriter.jpg","4young-heart.jpg","3beautiful-lies.jpg","2fire-within.jpg","1birdy.jpg","functionsAndVars.js","components/Discography/Discography.js","components/About/About.js","components/Verification/Verification.js","hooks/outsideRef.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["questions","question","answers","answer","isGood","indexesArray","map","value","index","getQuestion","askedQuestions","answeredQuestions","length","Array","notAskedQuestions","idOfChoosenQuestion","filter","it","every","it2","Math","ceil","random","infoAboutCds","image","cd4","title","year","songs","cd3","cd2","cd1","Image","styled","img","props","count","Discography","cdsArray","useState","setcount","slideInOut","id","className","split","it1","src","alt","tabIndex","onMouseOver","onKeyPress","About","temporaryContentArray","pop","contentArray","Verification","setvisibilityOfVerification","setDataFromFormWasSend","setVisibilityOfForm","questionData","setQuestionData","numberOfGoodQuestions","setNumberOfGoodQuestions","text","settext","visibilityOfRestartButton","setVisibilityOfRestartButton","questionText","errorText","sendText","useEffect","setTimeout","onClick","item","event","target","newQuestion","handleAnswering","useOutsideRef","ref","setVisibility","handleClickOutside","current","contains","document","addEventListener","removeEventListener","emptyStrings","ContactForm","wasDataFromFormSend","visibilityOfVerification","wrapper","useRef","handlesettingVisibilityOfForm","useCallback","formAreaNames","defaultFormValues","username","surname","email","message","phone","formValues","setFormValues","sendingError","setSendingError","errors","setErrors","statusOfInputedData","setStatusOfInputedData","Object","values","handleInputChange","type","newStatuses","input","allInputedKeys","test","lengthOfPhone","notNullErrorText","minNumberOfLetters","newErrorsText","changeErrorText","label","onChange","disabled","firstQuestion","App","visibilityOfForm","timesOfStyleChanges","setTimesOfStyleChanges","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d63e4ee2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-american-songwriter.7e284031.jpg\";","export default __webpack_public_path__ + \"static/media/4young-heart.18fc0c85.jpg\";","export default __webpack_public_path__ + \"static/media/3beautiful-lies.c96dc547.jpg\";","export default __webpack_public_path__ + \"static/media/2fire-within.d5e8263b.jpg\";","export default __webpack_public_path__ + \"static/media/1birdy.0ebed2b9.jpg\";","import cd4 from './4young-heart.jpg';\r\nimport cd3 from './3beautiful-lies.jpg';\r\nimport cd2 from './2fire-within.jpg';\r\nimport cd1 from './/1birdy.jpg';\r\n\r\nconst gbColor =\"#e9f4f3\";\r\nconst borderColor = \"#262d35\";\r\n\r\nexport const defaultformStyle = {\r\n  //\"background-image\": './form-bg-mikhail-nilov.png',\r\n  background: gbColor,\r\n  height: \"100vh\",\r\n  width: \"50vw\",\r\n  \"border-left\": `1px solid ${borderColor}`,\r\n  margin: 0,\r\n  padding: 0,\r\n  top: \"0px\",\r\n  left: \"0px\",\r\n  display: \"none\",\r\n  position: \"fixed\",\r\n};\r\n\r\nexport const parametersOfSlideForm = (animationDuration, animationName, displayVar)=>{\r\n    return {\r\n      animationDuration: `${animationDuration}s`,\r\n      animationName: animationName,\r\n      WebkitAnimationFillMode: \"forwards\",\r\n      animationFillMode: \"forwards\",\r\n      display: displayVar\r\n}};\r\n\r\n//// verification code\r\n// set of questions\r\nconst questions = [\r\n  { \r\n    question: 'Which instrument doesn\\'t have strings?',\r\n    answers: [\r\n      {\r\n      answer: \"guitar\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"trumpet\",\r\n        isGood: true,\r\n      },\r\n      {\r\n        answer: \"harp\",\r\n        isGood: false,\r\n      },\r\n    ]\r\n  },\r\n  { \r\n    question: 'To which instrument you have to blow to play it?',\r\n    answers: [\r\n      {\r\n      answer: \"trumpet\",\r\n      isGood: true,\r\n      },\r\n      {\r\n        answer: \"piano\",\r\n        isGood: false,\r\n      },\r\n      {\r\n        answer: \"drum\",\r\n        isGood: false,\r\n      },\r\n    ]\r\n  },\r\n  { \r\n    question: 'Which instrument doesn\\'t have keys?',\r\n    answers: [\r\n      {\r\n      answer: \"accordion\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"piano\",\r\n        isGood: false,\r\n      },\r\n      {\r\n        answer: \"guitar\",\r\n        isGood: true,\r\n      },\r\n    ]\r\n  },\r\n  { \r\n    question: 'Which of below isn\\'t a name of singing voice?',\r\n    answers: [\r\n      {\r\n      answer: \"alto\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"Freddie Mercury\",\r\n        isGood: true,\r\n      },\r\n      {\r\n        answer: \"soprano\",\r\n        isGood: false,\r\n      },\r\n    ]\r\n  },\r\n  { \r\n    question: 'Which band usually perform pop songs?',\r\n    answers: [\r\n      {\r\n      answer: \"Rammstein\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"Mettalica\",\r\n        isGood: false,\r\n      },\r\n      {\r\n        answer: \"Panic in the Disco\",\r\n        isGood: true,\r\n      },\r\n    ]\r\n  },\r\n  { \r\n    question: 'Which artist/band originated in \\'90s?',\r\n    answers: [\r\n      {\r\n      answer: \"Birdy\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"Billie Eilish\",\r\n        isGood: false,\r\n      },\r\n      {\r\n        answer: \"Nirvana\",\r\n        isGood: true,\r\n      },\r\n    ]\r\n  }\r\n];\r\n// array with keys in question object\r\nconst indexesArray = questions.map((value, index)=>index);\r\n// Object.keys(questions).map(it=>+it);\r\n\r\n// get question with answers\r\n\r\nexport const getQuestion = (\r\n  askedQuestions //array\r\n) => {\r\n  let question = { \r\n    question: '',\r\n    answers: [\r\n      {\r\n      answer: \"\",\r\n      isGood: false,\r\n      },\r\n      {\r\n        answer: \"\",\r\n        isGood: false,\r\n      },\r\n      {\r\n        answer: \"\",\r\n        isGood: false,\r\n      },\r\n    ]\r\n  };\r\n  let answeredQuestions = askedQuestions;\r\n  if(askedQuestions.length===5){\r\n    // If user answered 5 questions and didn't get 3 good answers <=> user isn't considered as a person.\r\n    answeredQuestions = new Array(4);\r\n    return {question, askedQuestions: answeredQuestions}; \r\n  }\r\n  \r\n  //// choose different question every time\r\n\r\n  // get random number \r\n  let random = 1;\r\n  let notAskedQuestions = [];\r\n\r\n  if (askedQuestions === []){\r\n    notAskedQuestions = indexesArray;\r\n  }else{\r\n    // get  questions which haven't been asked\r\n    notAskedQuestions = indexesArray.filter(\r\n      it=>\r\n      // checks if number of question isn't in askedQuestions array\r\n      askedQuestions.every(it2=>it!==it2) \r\n    )\r\n  }\r\n  random = Math.ceil(Math.random()*notAskedQuestions.length);\r\n  // choose id of question\r\n  const idOfChoosenQuestion = notAskedQuestions[random-1];\r\n \r\n  answeredQuestions =[...answeredQuestions, idOfChoosenQuestion];\r\n  question = questions[idOfChoosenQuestion];\r\n\r\n  return {question, askedQuestions: answeredQuestions};\r\n}\r\n\r\n\r\n\r\n//for Discography component\r\nexport const infoAboutCds = [\r\n  {\r\n    image: cd4, \r\n    title:\"Young heart\",\r\n    year: \"2021\", \r\n    songs: `\r\n    1. The Witching Hour Intro,\r\n    2. Voyager,\r\n    3. Loneliness,\r\n    4. The Otherside,\r\n    5. Surrender,\r\n    6. Nobody Knows Me Like You Do,\r\n    7. River Song,\r\n    8. Second Hand News,\r\n    9. Deepest Lonely,\r\n    10. Lighthouse,\r\n    11. Chopin Waltz In A Minor Interlude,\r\n    12. Evergreen,\r\n    13. Little Blue,\r\n    14. Celestial Dancers,\r\n    15. New Moon,\r\n    16. Young Heart`\r\n  },\r\n  {\r\n    image: cd3, \r\n    title:\"Beautiful Lies\",\r\n    year: \"2016\", \r\n    songs: `1. Growing Pains,\r\n    2. Shadow,\r\n    3. Keeping Your Head Up,\r\n    4. Deep End,\r\n    5. Wild Horses,\r\n    6. Growing Pains,\r\n    7. Lost It All,\r\n    8. Silhouette,\r\n    9. Lifted,\r\n    10. Take My Heart,\r\n    11. Hear You Calling,\r\n    12. Words,\r\n    13. Save Yourself,\r\n    14. Unbroken`\r\n  }, \r\n  { \r\n    image: cd2,\r\n    title: \"Fire Within\", \r\n    year: \"2012\", \r\n    songs:`\r\n    1. Wings,\r\n    2. Heart of Gold,\r\n    3. Light Me Up,\r\n    4. Words as Weapons,\r\n    5. All You Never Say,\r\n    6. Strange Birds,\r\n    7. Maybe\tBirdy,\r\n    8. No Angel,\r\n    9. All About You,\r\n    10. Standing in the Way of the Light,\r\n    11. Shine`\r\n},\r\n  {\r\n    image: cd1, \r\n    title: \"Birdy\",\r\n    year: \"2011\",\r\n    songs: `\r\n    1. 1901\tBirdy,\r\n    2. Skinny Love,\r\n    3. People Help the People,\t\r\n    4. White Winter Hymnal,\r\n    5. The District Sleeps Alone Tonight,\r\n    6. I'll Never Forget You,\r\n    7. Young Blood,\r\n    8. Shelter,\r\n    9. Fire and Rain,\r\n    10. Without a Word,\r\n    11. Terrible Love`\r\n  }\r\n]","import './../../dist/App.css';\r\nimport React, {useState} from 'react';\r\nimport {infoAboutCds} from '../../functionsAndVars';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Image = styled.img`\r\ntransform: ${props => props.count ? \"translateX(-90%)\" : \"translateX(0%)\"};\r\n`\r\n\r\nfunction Discography(props) {\r\n  const cdsArray = infoAboutCds;\r\n  const [count, setcount] =useState(//0);\r\n  {0:false,1:false,2:false,3:false});\r\n\r\n  const slideInOut = (index) =>{\r\n    setcount(count=> \r\n      { const f = \r\n       {...count, \r\n         [index]: !count[index],\r\n       };\r\n       return f;\r\n       }\r\n       )\r\n  }\r\n\r\n  return (\r\n    <div id=\"discs\">\r\n      <h4>Discography</h4>\r\n      <div className=\"disc-wrapper\">\r\n         {\r\n           cdsArray.map((it, index)=>{\r\n            return (\r\n            <div className=\"disc-container\">\r\n              <div key={`dev-${index}`}\r\n              className=\"disc-img\">\r\n                <div>\r\n                {it.songs.split(\",\").map(it1=>(<p>{it1}</p>))}\r\n                </div>\r\n                <Image key={`img-${index}`} src={it.image} count={count[index]}\r\n                alt={`${it.title} cover`}\r\n                tabIndex=\"1\"\r\n                onMouseOver={()=>slideInOut(index)}\r\n                onKeyPress={()=>slideInOut(index)}\r\n                alt= {it[1]}\r\n                />\r\n              </div>\r\n              <div \r\n              className=\"disc-text\"\r\n              key={`text-${index}`}>\r\n                <p className=\"disc-title\">{it.title}</p>\r\n                {/* <p  key={`p-${index}`} >{JSON.stringify(count[index])}</p> */}\r\n                <p className=\"disc-year\">{it.year}</p>\r\n                </div>\r\n            </div>\r\n            );}\r\n            )\r\n         } \r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Discography;\r\n","import './../../dist/App.css';\r\nimport React from 'react';\r\nimport Discography from './../Discography/Discography';\r\n\r\nfunction About(props) {\r\n  let conetentText = `Her debut single, a cover version of Bon Iver's \"Skinny Love\",\r\n   was her breakthrough, charting all across Europe and earning platinum certification\r\n   six times in Australia. Her self-titled debut album, Birdy, was peaking at number one\r\n   in Australia, Belgium and the Netherlands. At the 2014 Brit Awards, she was nominated\r\n   for Best British Female Solo Artist.`;\r\n\r\n  let temporaryContentArray = conetentText.split(\".\");\r\n  temporaryContentArray.pop();\r\n  const contentArray = temporaryContentArray.map(it => it+\".\");\r\n\r\n      \r\n  return (\r\n    <div className =\"about\">\r\n        <h2>Winner of <b>Open Mic UK</b> competition in 2008, at the age of <b>12</b>.</h2>\r\n        {\r\n          contentArray.map((it, index)=>(\r\n            <div key={index}> \r\n              {it}\r\n            </div>\r\n          ))\r\n        }\r\n    <Discography />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import './../../dist/App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getQuestion } from './../../functionsAndVars';\r\n\r\nfunction Verification(props) {\r\n    const { setvisibilityOfVerification, setDataFromFormWasSend, setVisibilityOfForm } = props;\r\n\r\n    const [questionData, setQuestionData] =useState(getQuestion([]));\r\n    const [numberOfGoodQuestions, setNumberOfGoodQuestions] = useState(0);\r\n    const [text, settext] = useState('');\r\n    const [visibilityOfRestartButton, setVisibilityOfRestartButton] = useState(false);\r\n    const {question: {question: questionText, answers}, askedQuestions} = questionData;\r\n    const errorText = 'You had 5 chances and you did\\'t get 3 good answers.';\r\n    const sendText = 'Your\\'e message was send. Verification tab will close after about 3 seconds.';\r\n\r\n    const handleAnswering = (event) => {\r\n      const goodAnswerObject = answers.filter(it=>it.isGood===true);\r\n      const {answer} = goodAnswerObject[0];\r\n      if(event.target.value === answer){\r\n        setNumberOfGoodQuestions(numberOfGoodQuestions+1);\r\n      }\r\n\r\n      const newQuestion = getQuestion(askedQuestions);\r\n      const {question:{question: textOfQuestion}} =  newQuestion;\r\n      if(textOfQuestion !==''){\r\n        setQuestionData(newQuestion);\r\n      }\r\n      else{ \r\n        if(text !== sendText) {\r\n        // user exceeded limit of 5 questions and didn't answered with 3 good answers\r\n          settext(errorText);\r\n        }\r\n       }\r\n    }\r\n\r\n    // handling getting 3 good answers\r\n    useEffect(()=>{\r\n      if(numberOfGoodQuestions===3){\r\n        settext(sendText);\r\n\r\n        // area to add function to send data from form \r\n      }\r\n    }, [numberOfGoodQuestions])\r\n\r\n    //// restarting process of verifying\r\n    // show reset button\r\n    useEffect(()=>{\r\n      if(text === errorText) { \r\n      setVisibilityOfRestartButton(true);\r\n      }\r\n    }, [text])\r\n  \r\n    const handleRestartButton = () => {\r\n      // setting every state to initial value\r\n      settext('');\r\n      setVisibilityOfRestartButton(false);\r\n      setQuestionData(getQuestion([]));\r\n      setNumberOfGoodQuestions(0);\r\n    }\r\n\r\n    // handling exiting verification tab\r\n    useEffect(()=>{\r\n      if(text === sendText) {\r\n        setTimeout( () =>{\r\n        setvisibilityOfVerification(false);\r\n        setVisibilityOfForm(false);\r\n        setDataFromFormWasSend(true);// added to form tab be able to close automaticly\r\n        },\r\n        3000);\r\n      };\r\n    }, [text])\r\n\r\n    const handleExitButton = () => {\r\n      setVisibilityOfRestartButton(false);\r\n      setvisibilityOfVerification(false);\r\n    }\r\n\r\n  return (\r\n    <div \r\n    className =\"verification\"\r\n    >\r\n        {visibilityOfRestartButton &&\r\n          <button\r\n          id=\"exit\"\r\n          onClick={handleExitButton}\r\n          >x</button>\r\n          }\r\n        <h4>We must check if you're a person ;)</h4>\r\n        <h6>Please answer 3 questions.</h6>\r\n        <div className=\"question\">\r\n            {questionText}\r\n        </div>\r\n        {answers.map((item, index) =><div key={index}>\r\n        <button className=\"questionsAnswer\"\r\n        onClick={(event)=>handleAnswering(event)}\r\n        value={item.answer}\r\n        >{item.answer}</button>\r\n        </div>)}\r\n        <div className=\"comunicates\"><bold>{text}</bold></div>\r\n        <div>\r\n          {visibilityOfRestartButton &&\r\n            <button\r\n            onClick={handleRestartButton}\r\n            >Restart</button>\r\n          }\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Verification;\r\n","import { useEffect } from 'react';\r\n\r\nfunction useOutsideRef (ref, setVisibility) {\r\n\r\n   useEffect( () => {\r\n      function handleClickOutside(event) {\r\n            \r\n         if (ref.current && !ref.current.contains(event.target)) {\r\n            setVisibility();\r\n            }\r\n      }\r\n\r\n      // subscribe functionality\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      // unsubscribe functionality\r\n      return () => {\r\n         document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n       \r\n   }, [ref, setVisibility])\r\n\r\n    \r\n}\r\n\r\n\r\nexport default useOutsideRef;\r\n","import './../../dist/App.css';\r\nimport Verification from './../Verification/Verification'\r\nimport { getQuestion } from './../../functionsAndVars';\r\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\r\nimport useOutsideRef from './../../hooks/outsideRef';\r\n\r\nconst emptyStrings = [\"\",\"\",\"\",\"\",\"\"];\r\nconst minNumberOfLetters = 0;\r\n\r\nfunction ContactForm(props) {\r\n  const { setVisibilityOfForm, wasDataFromFormSend, setDataFromFormWasSend } = props;\r\n\r\n  const [visibilityOfVerification, setvisibilityOfVerification] = useState(false);\r\n\r\n  const wrapper = useRef(null);\r\n  const handlesettingVisibilityOfForm = useCallback(() => {\r\n    if (visibilityOfVerification) {\r\n      setVisibilityOfForm(true)\r\n    } else {\r\n     setVisibilityOfForm(false)\r\n    }\r\n    if(wasDataFromFormSend){\r\n      setVisibilityOfForm(false)\r\n    }\r\n  }, [setVisibilityOfForm, visibilityOfVerification, wasDataFromFormSend]);\r\n  useOutsideRef(wrapper, handlesettingVisibilityOfForm)\r\n  \r\n  const formAreaNames = [\"username\", \"surname\", \"email\", \"message\", \"phone\"];\r\n  const defaultFormValues = {\r\n      username: \"\",\r\n      surname: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      phone: \"\",\r\n  };\r\n  const [formValues, setFormValues] =useState(defaultFormValues);\r\n  const [sendingError, setSendingError] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState(emptyStrings);\r\n    const [statusOfInputedData, setStatusOfInputedData] = useState([true, true, true, true, true]);\r\n\r\n  \r\n  const handleClickingButtonToSend = () => {\r\n    if(\r\n    errors.every(it=>it ===\"\")\r\n    & Object.values(formValues).every(it=>it!==\"\")\r\n    ){\r\n       \r\n      setvisibilityOfVerification(!visibilityOfVerification);\r\n      setSendingError(\"\");\r\n    }else {setSendingError(\"Add all proper informations to send it to us.\");}\r\n  }\r\n\r\n  useEffect(()=>{\r\n     if( \r\n      errors === emptyStrings & \r\n    sendingError!== \"\" &\r\n    Object.values(formValues).every(it=>it===\"\")\r\n      ){\r\n        setSendingError(\"\"); //clean error of sending\r\n    }\r\n  }, [errors, formAreaNames, formValues, sendingError\r\n  ]);\r\n\r\n  const handleInputChange = (event, type) => {\r\n    // event.preventDefault();\r\n    let existingInput;\r\n    const newStatuses = [ ...statusOfInputedData];\r\n    const input = event.target.value;\r\n    const allInputedKeys = input.split(\"\");\r\n\r\n    switch (type){ \r\n      case formAreaNames[0]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[0]]: input}});\r\n\r\n        existingInput = formValues[formAreaNames[0]].split(\"\");\r\n        if(existingInput.length !== allInputedKeys.length) { //if user deleted or added something to input\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        } \r\n\r\n        if(!/(\\W)|(\\d)|(\\s)/.test(input) & allInputedKeys.length > minNumberOfLetters) {\r\n          newStatuses[0]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } else {\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        if (input ===\"\"){\r\n          newStatuses[0]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        break;\r\n      case formAreaNames[1]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[1]]: input}});\r\n        existingInput = formValues[formAreaNames[1]].split(\"\");\r\n        if(existingInput.length !== allInputedKeys.length) { //if user deleted or added something to input\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        } \r\n\r\n        if(!/(\\W)|(\\d)|(\\s)/.test(input) & allInputedKeys.length > minNumberOfLetters) {\r\n          newStatuses[1]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } else {\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        if (input ===\"\"){\r\n          newStatuses[1]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        break;\r\n      case formAreaNames[2]:\r\n        newStatuses[2]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        setFormValues(current =>{return {...current, [formAreaNames[2]]: input}});\r\n        if(/^[a-zA-Z0-9._-]{1,}@[a-zA-Z0-9.-]{1,}\\.[a-zA-Z]{1,6}$/.test(input) && /@{1}/.test(input)) {\r\n          newStatuses[2]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } \r\n        break;\r\n      case formAreaNames[3]:\r\n        setFormValues(current =>{return {...current, [formAreaNames[3]]: input}});\r\n        if(input !==\"\"){\r\n          newStatuses[3]=true;\r\n          setStatusOfInputedData(newStatuses);\r\n        } else {\r\n          newStatuses[3]=false;\r\n          setStatusOfInputedData(newStatuses);\r\n        }\r\n        break;\r\n        case formAreaNames[4]:\r\n          setFormValues(current =>{return {...current, [formAreaNames[4]]: input}});\r\n          const lengthOfPhone = (allInputedKeys.length >= 8 & allInputedKeys.length<=11);\r\n          if (/\\D[^\\s]/.test(input)) {\r\n            newStatuses[4]=false;\r\n            setStatusOfInputedData(newStatuses);\r\n            break;\r\n          }\r\n          if(/(^[^0])(\\d)/.test(input) & lengthOfPhone){\r\n            newStatuses[4]=true;\r\n            setStatusOfInputedData(newStatuses);\r\n          } else {\r\n            newStatuses[4]=false;\r\n            setStatusOfInputedData(newStatuses);\r\n          }\r\n          break;        \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\nconst notNullErrorText = {\r\n  username:`Your name have to contain only letters and have them more than ${minNumberOfLetters+1}.`,\r\n  surname: `Your surname have to contain only letters and have them more than ${minNumberOfLetters+1}.`,\r\n  email: `Your e-mail adress doesn't have  proper e-mail adress format.`,\r\n  message: `Add some message.`,\r\n  phone: `Phone has to contain only numbers and has length between 8 and 11.`,\r\n  }\r\n\r\n  const changeErrorText = (index)=>{\r\n    if(!statusOfInputedData[index]) {\r\n      return `${notNullErrorText[formAreaNames[index]]}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    const newErrorsText = statusOfInputedData.map((value, index)=>changeErrorText(index));\r\n    setErrors(newErrorsText);\r\n  },[statusOfInputedData])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(wasDataFromFormSend){\r\n      setFormValues(defaultFormValues);\r\n      setErrors(emptyStrings);\r\n    }\r\n  }, [wasDataFromFormSend])\r\n\r\n  return (\r\n    <div \r\n    id=\"form\"\r\n    // style={style}\r\n    className=\"form\"\r\n    ref={wrapper}\r\n    >\r\n        <h4>If you want us to perform in your event, please fill the form to contact with our manager!</h4>\r\n        <div> \r\n            <p>Your name:</p>\r\n            <input label=\"username\"\r\n            value={formValues[formAreaNames[0]]}\r\n            onChange={(event) => {\r\n            handleInputChange(event, formAreaNames[0]);}}\r\n            />\r\n            <div className=\"error\"><bold>{errors[0]}</bold></div>\r\n            <p>Your surname:</p>\r\n            <input label=\"surname\"\r\n            value={formValues[formAreaNames[1]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[1])}}\r\n            />\r\n            <div className=\"error\"><bold>{errors[1]}</bold></div>\r\n            <p>Your e-mail adress:</p>\r\n            <input label=\"e-mail\"\r\n            type=\"email\"\r\n            value={formValues[formAreaNames[2]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[2])}}\r\n            />\r\n            <div className=\"error\"><bold>{errors[2]}</bold></div>\r\n            <p>Your phone number:</p>\r\n            <input label=\"phone\"\r\n            type=\"tel\"\r\n            value={formValues[formAreaNames[4]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[4])}}\r\n            />\r\n            <div className=\"error\"><bold>{errors[4]}</bold></div>\r\n            <p>Tell us e.g. when and where you want us to perform concert:</p>\r\n            <textarea label=\"message\"\r\n            value={formValues[formAreaNames[3]]}\r\n            onChange={(event) => {handleInputChange(event, formAreaNames[3])}}\r\n            />\r\n            <div className=\"error\"><bold>{errors[3]}</bold></div>\r\n            <div className=\"error\">{sendingError}</div>\r\n        </div>\r\n        <div><button \r\n        id=\"btn-sendform\" \r\n        onClick={handleClickingButtonToSend}\r\n        disabled={visibilityOfVerification}\r\n        >Send your proposition.</button></div>\r\n        {visibilityOfVerification &&\r\n          <Verification\r\n          firstQuestion={getQuestion([])}\r\n          setvisibilityOfVerification={setvisibilityOfVerification}\r\n          setDataFromFormWasSend={setDataFromFormWasSend}\r\n          setVisibilityOfForm={setVisibilityOfForm}\r\n          /> \r\n          }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import './dist/App.css';\r\nimport img from './header-american-songwriter.jpg'\r\nimport About from './components/About/About'\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [visibilityOfForm, setVisibilityOfForm] = useState(false);\r\n  const [timesOfStyleChanges, setTimesOfStyleChanges ] = useState(0);\r\n  // const [visibilityOfVerification, setvisibilityOfVerification] = useState(false);\r\n  const [wasDataFromFormSend, setDataFromFormWasSend] = useState(false);\r\n\r\n  const handleContactButtonClick = () =>{\r\n  \r\n    setDataFromFormWasSend(false); //added to not closing form, when it is opening after succesfully send data from form. \r\n    setVisibilityOfForm(true);\r\n    if (timesOfStyleChanges === 0){\r\n        // added to not append additional style properties to css, which gives error\r\n    setTimesOfStyleChanges(timesOfStyleChanges+1);\r\n    }\r\n  }\r\n\r\n  // const handleSendingButtonClick = () =>{\r\n  //   setvisibilityOfVerification(!visibilityOfVerification);\r\n  // }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n          <div className=\"header-wrapper\"> \r\n          <img src={img} alt=\"header-img\"></img>\r\n          <h1>BIRDY</h1>\r\n          </div>\r\n      </header>\r\n      <main>      \r\n        <div>\r\n          <div>\r\n          <About />\r\n          <h4>Listen some of her songs.</h4>\r\n         <div>\r\n          <div className=\"videos-wrapper\"> \r\n          <div>\r\n          <iframe title=\"first music video\" src=\"https://www.youtube.com/embed/OmLNs6zQIHo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        <div className=\"videos-wrapper\">\r\n          <div>\r\n            <iframe title=\"second music video\" src=\"https://www.youtube.com/embed/WJTXDCh2YiA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        <div className=\"videos-wrapper\">\r\n          <div>\r\n          <iframe \r\n          title=\"third music video\" src=\"https://www.youtube.com/embed/6K25KhCq7p8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n        </div>  \r\n          </div>\r\n\r\n            <button id=\"btn-contact\" \r\n            disabled={visibilityOfForm}\r\n            onClick={handleContactButtonClick}\r\n            >Contact with us!</button>\r\n         </div>\r\n         \r\n        { visibilityOfForm &&\r\n         <ContactForm \r\n         setVisibilityOfForm={setVisibilityOfForm}\r\n        //  handleSendingButtonClick={handleSendingButtonClick}\r\n        //  visibilityOfVerification={visibilityOfVerification}\r\n         wasDataFromFormSend={wasDataFromFormSend}\r\n         setDataFromFormWasSend={setDataFromFormWasSend}\r\n         />\r\n         }\r\n         {/* {visibilityOfVerification &&\r\n          <Verification\r\n          firstQuestion={getQuestion([])}\r\n          setvisibilityOfVerification={setvisibilityOfVerification}\r\n          setDataFromFormWasSend={setDataFromFormWasSend}\r\n          setVisibilityOfForm={setVisibilityOfForm}\r\n          /> \r\n          } */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dist/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}